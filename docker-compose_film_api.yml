version: '3.9'

services:
  postgres:
    image: postgres:13
    container_name: postgres
    volumes:
      - pg_data:/var/lib/postgresql/data/
      - ./postgres:/docker-entrypoint-initdb.d
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_DB=${PG_NAME}
    restart: always


  elasticsearch:
    image: elasticsearch:8.6.2
    container_name: elasticsearch
    ports:
      - "9200:9200"
    environment:
      - "discovery.type=single-node"
      - "xpack.security.enabled=false"
    env_file:
      - .env
    volumes:
      - es_data:/usr/share/elasticsearch/data


  data_transfer_sqlite_to_pg:
    build:
      context: data_transfer_sqlite_to_pg
      dockerfile: Dockerfile
    container_name: data_transfer
    ports:
      - "8888:8888"
    env_file:
      - .env
    restart: always


  app:
    build:
      context: admin_django
      dockerfile: Dockerfile
    container_name: django_web
    expose:
      - 8000
    env_file:
      - .env
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./data:/data/:ro
    depends_on:
      - postgres


  nginx:
    image: nginx:1.19.2
    container_name: nginx
    volumes:
      - ./admin_nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./admin_nginx/site.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./data:/data/:ro
    depends_on:
      - app
    ports:
      - "80:80"
      - "8000:80"

  cache:
    image: redis:7.2.3-alpine3.18
    container_name: cache
    restart: always
    ports:
      - '6379:6379'
    env_file:
      - .env
    volumes:
      - cache:/data

volumes:
  pg_data:
  es_data:
  static_volume:
  media_volume:
  cache:

